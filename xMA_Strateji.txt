// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © ozcanozbek

//@version=5
strategy("xMA Strateji", overlay=true, pyramiding=0, commission_type=strategy.commission.percent, commission_value=0, default_qty_type=strategy.cash, default_qty_value=10000, initial_capital=10000, currency=currency.TRY)
src = input(title='Mum', defval=close, group="Kaynak Çeşitleri")

// { Time Range
FromMonth = input.int(defval=1, title='FromMonth', group='Time', minval=1, maxval=12)
FromDay = input.int(defval=1, title='FromDay', group='Time', minval=1, maxval=31)
FromYear = input.int(defval=2000, title='FromYear', group='Time', minval=2000)
ToMonth = input.int(defval=1, title='ToMonth', group='Time', minval=1, maxval=12)
ToDay = input.int(defval=1, title='ToDay', group='Time', minval=1, maxval=31)
ToYear = input.int(defval=9999, title='ToYear', group='Time', minval=2010)
start = timestamp(FromYear, FromMonth, FromDay, 00, 00)
finish = timestamp(ToYear, ToMonth, ToDay, 23, 59)
window() =>
    time >= start and time <= finish ? true : false

afterStartDate = time >= start and time <= finish ? true : false

zeroline = 0

// } Time Range

// İŞLEMLER




// xMA Çizgi ve Kesişmeleri
string xMaTipBirinci   = input.string(defval="EMA", options = ["EMA", "(D)EMA", "(T)EMA", "SMA", "HMA", "RMA", "WMA"], title=  "Birinci xMA Tipi", group="xMA Birinci Değerleri")
string xMaTipIkinci   = input.string(defval="EMA", options = ["EMA", "(D)EMA", "(T)EMA", "SMA", "HMA", "RMA", "WMA"], title=  "İkinci xMA tipi", group="xMA İkinci Değerleri")
string xMaTipBaraj   = input.string(defval="EMA", options = ["EMA", "(D)EMA", "(T)EMA", "SMA", "HMA", "RMA", "WMA"], title=  "Baraj xMA tipi", group="xMA Baraj Değerleri")

demaHesapla(src,len)=>
    ema1 = ta.ema(src, len)
    ema2 = ta.ema(ema1, len)
    (2 * ema1) - ema2  

temaHesapla(src,len)=>
    ema1 = ta.ema(src, len)
    ema2 = ta.ema(ema1, len)
    ema3 = ta.ema(ema2, len)
    3 * (ema1 - ema2) + ema3  

xMaKontrol(xMaTip, src, len)=>
    float xMA = switch xMaTip
        "EMA" => ta.ema(src, len) 
        "SMA" => ta.sma(src, len) 
        "HMA" => ta.hma(src, len) 
        "RMA" => ta.rma(src, len) 
        "WMA" => ta.wma(src, len) 
        "(D)EMA" => demaHesapla(src,len)
        "(T)EMA" => temaHesapla(src,len)
        => 0.0 



xMA_Birinci_Color = color.new(color.lime, 0)
lengthBirinci = input(20, 'xMA Birinci', group="xMA Birinci Değerleri")
xMA_Birinci = xMaKontrol(xMaTipBirinci, src, lengthBirinci) 
plot(xMA_Birinci, color=xMA_Birinci_Color, linewidth=3, title='xMa Birinci Çizgisi')

xMA_Ikinci_Color = color.new(color.red, 0)
lengthIkinci = input(50, 'xMA Ikinci', group="xMA İkinci Değerleri")
xMA_Ikinci = xMaKontrol(xMaTipIkinci, src, lengthIkinci) 
plot(xMA_Ikinci, color=xMA_Ikinci_Color, linewidth=2, title='xMa Ikinci Çizgisi')

xMA_Baraj_Color = color.new(color.orange, 0)
lengthBaraj = input(100, 'xMA Baraj', group="xMA Baraj Değerleri")
xMA_Baraj = xMaKontrol(xMaTipBaraj, src, lengthBaraj) 
plot(xMA_Baraj, color=xMA_Baraj_Color, linewidth=2, title='xMa Baraj Çizgisi')
acBaraj = input.bool(defval = false, title = 'Baraj Uygulansın mı?', group="xMA Baraj Değerleri") 


acKaynak = input.bool(defval = false, title = 'BirinciAL) ve İkinci(SAT) Çizgiler Mum ile Kesiştirilsin', group="xMA Hesaplama Yöntemi") 



kesAsagi = ta.crossunder(xMA_Birinci , xMA_Ikinci) 
kesYukari = ta.crossover(xMA_Birinci , xMA_Ikinci) 

if acKaynak
    kesAsagi := ta.crossunder(src , xMA_Ikinci) 
    kesYukari := ta.crossover(src , xMA_Birinci) 


//xMaAStyle = shape.triangledown
//xMaASize = size.small
//xMaAColor = color.lime
//xMaALocation = location.abovebar

//xMaYStyle = shape.triangleup
//xMaYSize = size.small
//xMaYColor = color.red
//xMaYLocation = location.belowbar

rsiSartAl = kesYukari
if acBaraj
    if xMA_Baraj < src
        rsiSartAl := false 

rsiSartSat = kesAsagi
if acBaraj
    if xMA_Baraj > src
        rsiSartSat := false 



//STRATEJİ SON BÖLÜM

isLong = strategy.position_size > 0
isShort = strategy.position_size < 0

if afterStartDate
    strategy.entry(id='xMA', direction=strategy.long, when=rsiSartAl)

if afterStartDate and isLong
    strategy.close(id='xMA', when=rsiSartSat)

// BURADA BİTTİ
